{"version":3,"sources":["components/Task.js","services/todoService.js","components/App.js","index.js"],"names":["Task","_ref","index","title","dueDate","importance","completed","toggleComplete","_useState","useState","_useState2","Object","slicedToArray","isCompleted","setIsCompleted","date","Date","overdue","taskStyle","textDecoration","color","transition","toggleCompleted","react_default","a","createElement","className","style","renderImportance","isNaN","toDateString","onClick","renderCompleteButton","getTodos","_getTodos","apply","this","arguments","_callee","todos","regenerator_default","wrap","_context","prev","next","axios","get","sent","abrupt","stop","postTodo","_x","_postTodo","_callee2","todo","_context2","post","putTodo","_x2","_x3","_putTodo","_callee3","id","update","_context3","put","concat","App","state","tasks","input","filters","showCompleted","componentDidMount","_this","setState","data","handleSubmit","e","_this$state$input","preventDefault","length","toConsumableArray","handleInput","objectSpread","target","value","handleImportance","handleDueDate","handleShowCompleted","togglecompleted","console","log","_id","renderTasks","map","task","components_Task","key","fontWeight","textAlign","onSubmit","bind","type","placeholder","onChange","backgroundColor","height","React","Component","render","components_App","document","getElementById"],"mappings":"2QAgFeA,EA9EF,SAAAC,GAAsE,IAAnEC,EAAmED,EAAnEC,MAAOC,EAA4DF,EAA5DE,MAAOC,EAAqDH,EAArDG,QAASC,EAA4CJ,EAA5CI,WAAYC,EAAgCL,EAAhCK,UAAWC,EAAqBN,EAArBM,eAAqBC,EAC3CC,mBAASH,IAAa,GADqBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1EK,EAD0EH,EAAA,GAC7DI,EAD6DJ,EAAA,GAE3EK,EAAO,IAAIC,KAAKZ,KAAY,EAC5Ba,EAAUF,GAAQ,IAAIC,KAEtBE,EAAY,CAChBC,eAAgBN,EAAc,eAAiB,GAC/CO,MAAOP,EAAc,OAASI,EAAU,MAAQ,QAChDI,WAAY,QAmDRC,EAAkB,WACtBR,GAAgBD,GAChBN,EAAeL,GACfI,GAAaA,GAGf,OACEiB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAaC,MAAOT,GAC/Bf,EADH,IAxDqB,WACvB,OAAQE,GACN,KAAK,EACH,MAAO,GACT,KAAK,EACH,OACEkB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAGnB,KAAK,EACH,OACEH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAGnB,KAAK,EACH,OACEH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAGnB,QACE,MAAO,IA+BEE,IAEXL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYC,MAAOT,GAC7BW,MAAMd,GAA8B,cAAtBA,EAAKe,gBAEvBP,EAAAC,EAAAC,cAAA,UAhCyB,WAC3B,OAAQZ,GACN,KAAK,EACH,OACEU,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBK,QAAST,GACzCC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAGnB,KAAK,EACH,OACEH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAAST,GAC3CC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAqBdM,sBCzEJ,SAAeC,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAhB,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACeC,IAAMC,IAAI,cADzB,cACCP,EADDG,EAAAK,KAAAL,EAAAM,OAAA,SAEET,GAFF,wBAAAG,EAAAO,SAAAX,6BAKA,SAAeY,EAAtBC,GAAA,OAAAC,EAAAjB,MAAAC,KAAAC,sDAAO,SAAAgB,EAAwBC,GAAxB,OAAAd,EAAAhB,EAAAiB,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACCC,IAAMW,KAAK,aAAcF,GAD1B,wBAAAC,EAAAN,SAAAI,6BAIA,SAAeI,EAAtBC,EAAAC,GAAA,OAAAC,EAAAzB,MAAAC,KAAAC,sDAAO,SAAAwB,EAAuBC,EAAIC,GAA3B,OAAAvB,EAAAhB,EAAAiB,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACCC,IAAMoB,IAAN,cAAAC,OAAwBJ,GAAMC,GAD/B,wBAAAC,EAAAf,SAAAY,iCCkKQM,6MAxKbC,MAAQ,CACNC,MAAO,GACPC,MAAO,CACLnE,MAAO,GACPE,WAAY,GACZD,QAAS,IAEXmE,QAAS,CACPC,cAAe,OAGnBC,uCAAoB,SAAAnC,IAAA,IAAAC,EAAA,OAAAC,EAAAhB,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEX,IADF,OACZM,EADYG,EAAAK,KAElB2B,EAAKC,SAAS,CAAEN,MAAO9B,EAAMqC,OAFX,wBAAAlC,EAAAO,SAAAX,QAIpBuC,mDAAe,SAAAxB,EAAMyB,GAAN,IAAAC,EAAA5E,EAAAE,EAAAD,EAAA,OAAAoC,EAAAhB,EAAAiB,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,UACbkC,EAAEE,mBACEN,EAAKN,MAAME,MAAMnE,MAAM8E,OAAS,GAFvB,CAAA1B,EAAAX,KAAA,eAAAmC,EAG4BL,EAAKN,MAAME,MAA1CnE,EAHG4E,EAGH5E,MAAOE,EAHJ0E,EAGI1E,WAAYD,EAHhB2E,EAGgB3E,QAC3BsE,EAAKC,SAAS,CACZN,MAAK,GAAAH,OAAAvD,OAAAuE,EAAA,EAAAvE,CACA+D,EAAKN,MAAMC,OADX,CAEH,CAAElE,QAAOG,WAAW,EAAOF,QAAS,IAAIY,KAAKZ,GAAUC,WAAYA,KAErEiE,MAAO,CACLnE,MAAO,GACPE,WAAY,EACZD,QAAS,MAZFmD,EAAAX,KAAA,EAeLM,EAAS,CAAE/C,QAAOE,aAAYD,YAfzB,wBAAAmD,EAAAN,SAAAI,8DAkBf8B,YAAc,SAAAL,GACZJ,EAAKC,SAAS,CACZL,MAAM3D,OAAAyE,EAAA,EAAAzE,CAAA,GACD+D,EAAKN,MAAME,MADX,CAEHnE,MAAO2E,EAAEO,OAAOC,aAItBC,iBAAmB,SAAAT,GACjBJ,EAAKC,SAAS,CACZL,MAAM3D,OAAAyE,EAAA,EAAAzE,CAAA,GACD+D,EAAKN,MAAME,MADX,CAEHjE,WAAYyE,EAAEO,OAAOC,aAI3BE,cAAgB,SAAAV,GACdJ,EAAKC,SAAS,CACZL,MAAM3D,OAAAyE,EAAA,EAAAzE,CAAA,GACD+D,EAAKN,MAAME,MADX,CAEHlE,QAAS0E,EAAEO,OAAOC,aAIxBG,oBAAsB,SAAAX,GACpBJ,EAAKC,SAAS,CACZJ,QAAQ5D,OAAAyE,EAAA,EAAAzE,CAAA,GACH+D,EAAKN,MAAMG,QADT,CAELC,eAAgBE,EAAKN,MAAMG,QAAQC,qBAIzCkB,sDAAkB,SAAA7B,EAAM3D,GAAN,IAAAmE,EAAA,OAAA7B,EAAAhB,EAAAiB,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cACZyB,EAAQK,EAAKN,MAAMC,OACjBnE,GAAOI,WAAa+D,EAAMnE,GAAOI,UACvCoE,EAAKC,SAAS,CAAEN,UAChBsB,QAAQC,IAAI,CAAEtF,UAAW+D,EAAMnE,GAAOI,YAJtB0D,EAAApB,KAAA,EAKVa,EAAQY,EAAMnE,GAAO2F,IAAK,CAAEvF,UAAW+D,EAAMnE,GAAOI,YAL1C,wBAAA0D,EAAAf,SAAAY,8DAOlBiC,YAAc,WACZ,OAAIpB,EAAKN,MAAMC,MAAMY,OAAS,EACrBP,EAAKN,MAAMC,MAAM0B,IAAI,SAACC,EAAM9F,GACjC,OAAIwE,EAAKN,MAAMG,QAAQC,cAEnBjD,EAAAC,EAAAC,cAACwE,EAAD,CACEC,IAAKhG,EACLA,MAAOA,EACPC,MAAO6F,EAAK7F,MACZG,UAAW0F,EAAK1F,UAChBF,QAAS4F,EAAK5F,QACdC,WAAY2F,EAAK3F,WACjBE,eAAgBmE,EAAKgB,kBAIlBM,EAAK1F,UACV,GAEAiB,EAAAC,EAAAC,cAACwE,EAAD,CACEC,IAAKhG,EACLA,MAAOA,EACPC,MAAO6F,EAAK7F,MACZG,UAAW0F,EAAK1F,UAChBF,QAAS4F,EAAK5F,QACdC,WAAY2F,EAAK3F,WACjBE,eAAgBmE,EAAKgB,yBAM7B,2EAKF,OACEnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEwE,WAAY,MAAOC,UAAW,WAA3C,cAEA7E,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqB2E,SAAUjE,KAAKyC,aAAayB,KAAKlE,OACpEb,EAAAC,EAAAC,cAAA,SACE8E,KAAK,OACL7E,UAAU,WACV8E,YAAY,aACZlB,MAAOlD,KAAKgC,MAAME,MAAMnE,MACxBsG,SAAUrE,KAAK+C,cAEjB5D,EAAAC,EAAAC,cAAA,SACE8E,KAAK,OACL7E,UAAU,WACV8E,YAAY,WACZlB,MAAOlD,KAAKgC,MAAME,MAAMlE,QACxBqG,SAAUrE,KAAKoD,gBAEjBjE,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACV8E,YAAY,aACZlB,MAAOlD,KAAKgC,MAAME,MAAMjE,WACxBoG,SAAUrE,KAAKmD,kBAEfhE,EAAAC,EAAAC,cAAA,UAAQ6D,MAAO,GAAf,KACA/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAO,GAAf,KACA/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAO,GAAf,KACA/D,EAAAC,EAAAC,cAAA,UAAQ6D,MAAO,GAAf,MAEF/D,EAAAC,EAAAC,cAAA,UACEC,UAAWU,KAAKgC,MAAME,MAAMnE,MAAM8E,OAAS,EAAI,kBAAoB,WACnEsB,KAAK,UAELhF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGjBH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oBACV4D,MAAOlD,KAAKgC,MAAMG,QAAQC,cAC1BzC,QAASK,KAAKqD,qBAEZrD,KAAKgC,MAAMG,QAAQC,cAAyC,sBAAzB,wBAEvCjD,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAE+E,gBAAiB,UAAWC,OAAQ,SAC/CpF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBAEFF,EAAAC,EAAAC,cAAA,aAAQW,KAAK0D,yBAjKPc,IAAMC,iBCCxBC,iBAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f78cb5d4.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Task = ({ index, title, dueDate, importance, completed, toggleComplete }) => {\n  const [isCompleted, setIsCompleted] = useState(completed || false);\n  const date = new Date(dueDate) || false;\n  const overdue = date <= new Date();\n\n  const taskStyle = {\n    textDecoration: isCompleted ? 'line-through' : '',\n    color: isCompleted ? 'grey' : overdue ? 'red' : 'black',\n    transition: '0.3s'\n  };\n\n  const renderImportance = () => {\n    switch (importance) {\n      case 0:\n        return '';\n      case 1:\n        return (\n          <span>\n            <i className=\"fas fa-exclamation\" />\n          </span>\n        );\n      case 2:\n        return (\n          <span>\n            <i className=\"fas fa-exclamation\" />\n            <i className=\"fas fa-exclamation\" />\n          </span>\n        );\n      case 3:\n        return (\n          <span>\n            <i className=\"fas fa-exclamation\" />\n            <i className=\"fas fa-exclamation\" />\n            <i className=\"fas fa-exclamation\" />\n          </span>\n        );\n      default:\n        return '';\n    }\n  };\n\n  const renderCompleteButton = () => {\n    switch (isCompleted) {\n      case true:\n        return (\n          <button className=\"complete task\" onClick={toggleCompleted}>\n            <i className=\"fas fa-check-square\" />\n          </button>\n        );\n      case false:\n        return (\n          <button className=\"incomplete task\" onClick={toggleCompleted}>\n            <i className=\"far fa-window-close\" />\n          </button>\n        );\n      default:\n    }\n  };\n\n  const toggleCompleted = () => {\n    setIsCompleted(!isCompleted);\n    toggleComplete(index);\n    completed = !completed;\n  };\n\n  return (\n    <tr className=\"task-container\">\n      <td className=\"task-title\" style={taskStyle}>\n        {title} {renderImportance()}\n      </td>\n      <td className=\"task-date\" style={taskStyle}>\n        {!isNaN(date) ? date.toDateString() : 'No Due Date'}\n      </td>\n      <td>{renderCompleteButton()}</td>\n    </tr>\n  );\n};\n\nexport default Task;\n","import axios from 'axios';\n\nexport async function getTodos() {\n  const todos = await axios.get('/api/todos');\n  return todos;\n}\n\nexport async function postTodo(todo) {\n  await axios.post('/api/todos', todo);\n}\n\nexport async function putTodo(id, update) {\n  await axios.put(`/api/todos/${id}`, update);\n}\n","import React from 'react';\nimport Task from './Task';\nimport { getTodos, postTodo, putTodo } from '../services/todoService';\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    input: {\n      title: '',\n      importance: '',\n      dueDate: ''\n    },\n    filters: {\n      showCompleted: ''\n    }\n  };\n  componentDidMount = async () => {\n    const todos = await getTodos();\n    this.setState({ tasks: todos.data });\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    if (this.state.input.title.length > 0) {\n      const { title, importance, dueDate } = this.state.input;\n      this.setState({\n        tasks: [\n          ...this.state.tasks,\n          { title, completed: false, dueDate: new Date(dueDate), importance: importance }\n        ],\n        input: {\n          title: '',\n          importance: 0,\n          dueDate: ''\n        }\n      });\n      await postTodo({ title, importance, dueDate });\n    }\n  };\n  handleInput = e => {\n    this.setState({\n      input: {\n        ...this.state.input,\n        title: e.target.value\n      }\n    });\n  };\n  handleImportance = e => {\n    this.setState({\n      input: {\n        ...this.state.input,\n        importance: e.target.value\n      }\n    });\n  };\n  handleDueDate = e => {\n    this.setState({\n      input: {\n        ...this.state.input,\n        dueDate: e.target.value\n      }\n    });\n  };\n  handleShowCompleted = e => {\n    this.setState({\n      filters: {\n        ...this.state.filters,\n        showCompleted: !this.state.filters.showCompleted\n      }\n    });\n  };\n  togglecompleted = async index => {\n    let tasks = this.state.tasks;\n    tasks[index].completed = !tasks[index].completed;\n    this.setState({ tasks });\n    console.log({ completed: tasks[index].completed });\n    await putTodo(tasks[index]._id, { completed: tasks[index].completed });\n  };\n  renderTasks = () => {\n    if (this.state.tasks.length > 0) {\n      return this.state.tasks.map((task, index) => {\n        if (this.state.filters.showCompleted) {\n          return (\n            <Task\n              key={index}\n              index={index}\n              title={task.title}\n              completed={task.completed}\n              dueDate={task.dueDate}\n              importance={task.importance}\n              toggleComplete={this.togglecompleted}\n            />\n          );\n        } else {\n          return task.completed ? (\n            ''\n          ) : (\n            <Task\n              key={index}\n              index={index}\n              title={task.title}\n              completed={task.completed}\n              dueDate={task.dueDate}\n              importance={task.importance}\n              toggleComplete={this.togglecompleted}\n            />\n          );\n        }\n      });\n    } else {\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"task-board\">\n          <h1 style={{ fontWeight: '200', textAlign: 'center' }}>Add A Task</h1>\n\n          <form className=\"add-task-container\" onSubmit={this.handleSubmit.bind(this)}>\n            <input\n              type=\"text\"\n              className=\"new-task\"\n              placeholder=\"Task Title\"\n              value={this.state.input.title}\n              onChange={this.handleInput}\n            />\n            <input\n              type=\"text\"\n              className=\"new-date\"\n              placeholder=\"Due Date\"\n              value={this.state.input.dueDate}\n              onChange={this.handleDueDate}\n            />\n            <select\n              className=\"new-importance\"\n              placeholder=\"Importance\"\n              value={this.state.input.importance}\n              onChange={this.handleImportance}\n            >\n              <option value={0}>0</option>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n            </select>\n            <button\n              className={this.state.input.title.length > 0 ? 'add-task active' : 'add-task'}\n              type=\"submit\"\n            >\n              <i className=\"fas fa-plus\" />\n            </button>\n          </form>\n          <button\n            className=\"show-complete-btn\"\n            value={this.state.filters.showCompleted}\n            onClick={this.handleShowCompleted}\n          >\n            {!this.state.filters.showCompleted ? 'Show Completed Tasks' : 'Hide Complete Tasks'}\n          </button>\n          <table>\n            <tr style={{ backgroundColor: '#9AD1AB', height: '50px' }}>\n              <th>Task</th>\n              <th>Due Date</th>\n              <th>Completed</th>\n            </tr>\n            <tbody>{this.renderTasks()}</tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}